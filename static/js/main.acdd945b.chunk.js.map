{"version":3,"sources":["config/config.js","actions/questionAction.js","actionTypes/ActionTypes.js","actions/headerAction.js","actions/index.js","components/PropsComponent.js","components/questionTemplate/QuestionTemplate.js","components/questionForm/QuestionForm.js","components/loginPage/LoginPage.js","components/homePage/HomePage.js","components/logout/Logout.js","AppRouter.js","components/headerBar/HeaderBar.js","components/RootComponent.js","App.js","reducer/questionReducer.js","reducer/taskHeaderReducer.js","reducer/index.js","store/store.js","index.js"],"names":["CONSTANTS","getQuestionList","data","dispatch","url","axios","method","dataType","then","response","type","payload","catch","error","console","log","submitQuestionPaper","Promise","resolve","reject","isSuccess","setTimeToLogout","checkLoginCredential","ActionCreators","Object","assign","questionAction","headerAction","PorpsComponent","ComposedComponent","props","state","someData","this","Component","connect","TaskHeader","QuestionReducer","actions","bindActionCreators","QuestionTemplate","editable","className","question","questText","Group","onChange","e","solutionKey","target","value","firstOption","secondOption","thirdOption","fouthOption","withRouter","QuestionForm","onSubmitOfQuestion","event","a","preventDefault","questionData","questionList","history","replace","remaningTime","undefined","map","eachQuestion","index","onClick","LoginPage","onLoginSubmit","values","name","initialValues","remember","onFinish","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","style","float","htmlType","HomePage","onClickOfStartTest","adminUser","firstName","lastName","noOfHours","Logout","examSuccessReport","isPassed","totalMarks","isFailed","AppRouter","exact","path","component","HeaderBar","onMenuClick","sPath","key","push","headerVisible","showTimer","toDate","timeToLogout","RootComponent","exameHoursTime","currentDate","Date","setHours","getHours","setMinutes","getMinutes","getHeaderVisible","location","pathname","showHeader","children","App","initialState","token","rootReducer","combineReducers","action","newState","cloneDeep","user","taskList","logoutTimeRemaning","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","createHistory","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acdd945b.chunk.js","sourcesContent":["export const CONSTANTS = {\r\n\r\n        // URL:\"http://localhost:4000/task-manager/api/\"\r\n        URL:\"http://34.93.157.105:4000/task-manager/api/\"\r\n}","import * as ActionType from \"../actionTypes/ActionTypes\";\r\nimport { CONSTANTS } from \"../config/config\";\r\nimport axios from \"axios\";\r\n\r\nexport const getQuestionList = (data) => (dispatch) => {\r\n  const url = CONSTANTS.URL + \"allTestQuestion\";\r\n  axios({\r\n    url: url,\r\n    method: \"GET\",\r\n    dataType: \"JSON\",\r\n  })\r\n    .then((response) => {\r\n      // console.log(response);\r\n      dispatch({\r\n        type: ActionType.GET_QUESTION_LIST_DATA,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\nexport const submitQuestionPaper = (data) => (dispatch) => {\r\n  const questionSubmit = new Promise((resolve, reject) => {\r\n    const url = CONSTANTS.URL + \"submitTestQuestions\";\r\n    axios({\r\n      url: url,\r\n      method: \"POST\",\r\n      dataType: \"JSON\",\r\n      data: data,\r\n    })\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: ActionType.GET_QUESTION_SUBMIT_DATA,\r\n          payload: response.data,\r\n        });\r\n        resolve({isSuccess:true});\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  });\r\n  return questionSubmit;\r\n};\r\n","// Header Types\r\nexport const GET_HEADER_DATA = 'GET_HEADER_DATA';\r\n//DASHBOARD TYPES\r\nexport const GET_DASHBOARD_DATA = 'GET_DASHBOARD_DATA';\r\n// Create Task types\r\nexport const GET_QUESTION_LIST_DATA = 'GET_QUESTION_LIST_DATA';\r\nexport const SET_LOGOUT_TIME = 'SET_LOGOUT_TIME';\r\nexport const GET_ADMIN_USER_DATA = 'GET_ADMIN_USER_DATA';\r\nexport const LOGIN_SUCCESSFUL_DATA = 'LOGIN_SUCCESSFUL_DATA';\r\nexport const GET_QUESTION_SUBMIT_DATA = 'GET_QUESTION_SUBMIT_DATA';","import * as ActionType from \"../actionTypes/ActionTypes\";\r\nimport { CONSTANTS } from \"../config/config\";\r\nimport axios from \"axios\";\r\n\r\nexport const setTimeToLogout = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: ActionType.SET_LOGOUT_TIME,\r\n    payload: 1,\r\n  });\r\n}\r\nexport const checkLoginCredential = (data) => (dispatch) => {\r\n  \r\n  const loginReturn = new Promise((resolve, reject) => {\r\n    const url = CONSTANTS.URL + \"login\";\r\n    axios({\r\n      url: url,\r\n      method: \"POST\",\r\n      dataType: \"JSON\",\r\n      data: data,\r\n    })\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: ActionType.LOGIN_SUCCESSFUL_DATA,\r\n          payload: response.data,\r\n        });\r\n        resolve({isSuccess:true});\r\n      })\r\n      .catch((error) => {\r\n        reject({isSuccess:false});\r\n        console.log(error);\r\n      });\r\n  });\r\n  return loginReturn;\r\n};\r\n","import * as questionAction from './questionAction';\r\nimport * as headerAction from './headerAction';\r\n\r\nexport const ActionCreators = Object.assign(\r\n    {},\r\n    questionAction,\r\n    headerAction\r\n);","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ActionCreators } from \"../actions\";\r\n\r\nexport default function PorpsComponent  (ComposedComponent){\r\n\r\n class PorpsComponent extends Component{\r\n\r\n    constructor(props){\r\n        \r\n        super(props);\r\n        this.state={\r\n            someData:'sdfgfds'\r\n        }\r\n    }\r\n\r\n    render() {\r\n      \r\n        return (<ComposedComponent {...this.props}/>);\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      TaskHeader: state.TaskHeader,\r\n      QuestionReducer:state.QuestionReducer\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      actions: bindActionCreators(ActionCreators, dispatch)\r\n    };\r\n  };\r\n  \r\n    return connect(mapStateToProps, mapDispatchToProps)(PorpsComponent);\r\n}","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./QuestionTemplate.css\";\r\nimport { Radio } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass QuestionTemplate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editable: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n            <div className=\"quest-temp\">{this.props.question.questText}</div>\r\n            <Radio.Group\r\n              onChange={(e) => {\r\n                this.props.question.solutionKey = e.target.value;\r\n              }}\r\n            >\r\n              <div className=\"row question-radio\">\r\n              <div className=\"col-xs-12 col-sm-6 col-sm-4\">\r\n                <Radio value={\"A\"}>{this.props.question.firstOption}</Radio>\r\n                <Radio value={\"B\"}>{this.props.question.secondOption}</Radio>\r\n                <Radio value={\"C\"}>{this.props.question.thirdOption}</Radio>\r\n                <Radio value={\"D\"}>{this.props.question.fouthOption}</Radio>\r\n              </div>\r\n              </div>\r\n            </Radio.Group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(QuestionTemplate);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { map } from \"lodash\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./QuestionForm.css\";\r\nimport QuestionTemplate from \"../questionTemplate/QuestionTemplate\";\r\nimport { Button } from \"antd\";\r\n\r\nclass QuestionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      questionList: [],\r\n      remaningTime: undefined,\r\n    };\r\n  }\r\n\r\n  onSubmitOfQuestion = async (event) => {\r\n    event.preventDefault();\r\n    const questionData = this.props.QuestionReducer.questionList;\r\n    const data = await this.props.actions.submitQuestionPaper(questionData);\r\n    if(data.isSuccess){\r\n        this.props.history.replace(\"/logout\");\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.actions.getQuestionList();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {map(this.props.QuestionReducer.questionList, (eachQuestion, index) => {\r\n          return (\r\n            <div className=\"question-form-block\">\r\n              <span className=\"question-count\">{index + 1}</span>\r\n              <div>\r\n                <QuestionTemplate question={eachQuestion} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"footer\">\r\n          <Button onClick={this.onSubmitOfQuestion}>Submit</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(QuestionForm);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"./LoginPage.css\";\r\nimport { Button, Form, Input } from \"antd\";\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      questionList: [],\r\n    };\r\n  }\r\n  onLoginSubmit = async(values) => {\r\n    const response = await this.props.actions.checkLoginCredential(values);\r\n    if (response.isSuccess) {\r\n        this.props.history.replace(\"/home\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-page-body\">\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form login-form-center\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={this.onLoginSubmit}\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter your E-mail!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input type=\"email\"\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"email Id\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter your Password!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(LoginPage);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./HomePage.css\";\r\nimport { Button } from \"antd\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      questionList: [],\r\n    };\r\n  }\r\n  onClickOfStartTest = () => {\r\n    this.props.history.replace(\"/question-paper\");\r\n    this.props.actions.setTimeToLogout();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"red-square\">\r\n          <h1>\r\n            Welcome\r\n            <span> {this.props.TaskHeader.adminUser.firstName} </span>\r\n            <span> {this.props.TaskHeader.adminUser.lastName} </span>\r\n          </h1>\r\n          <p>\r\n            The Question is of total {this.props.TaskHeader.noOfHours} hours You\r\n            get 5 minutes to read the question Paper and after time completion\r\n            it will submit automatically\r\n            <h4>Once you are ready with your test you can press Start Test</h4>\r\n          </p>\r\n          <Button style={{ float: \"right\" }} onClick={this.onClickOfStartTest}>\r\n            Start Test\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(HomePage);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Logout.css\";\r\n\r\nclass Logout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      questionList: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"red-square\">\r\n          <h1>\r\n            Thank you for your effort!\r\n            <span> {this.props.TaskHeader.adminUser.firstName} </span>\r\n            <span> {this.props.TaskHeader.adminUser.lastName} </span>\r\n          </h1>\r\n          <p>\r\n            {this.props.QuestionReducer.examSuccessReport.isPassed && (\r\n              <span>\r\n                congratulation you have scored\r\n                <span>{this.props.QuestionReducer.examSuccessReport.totalMarks}</span>\r\n              </span>\r\n            )}\r\n            {this.props.QuestionReducer.examSuccessReport.isFailed && (\r\n              <span>\r\n                Sorry you score is poor.You have scored\r\n                <span>{this.props.QuestionReducer.examSuccessReport.totalMarks}</span>\r\n                out of 100.\r\n              </span>\r\n            )}\r\n            <h4>you can close the broswer</h4>\r\n            <h4>All the best for future!!!..</h4>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Logout);\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport PorpsComponent from './components/PropsComponent';\r\nimport QuestionForm from \"./components/questionForm/QuestionForm\";\r\nimport LoginPage from \"./components/loginPage/LoginPage\";\r\nimport HomePage from \"./components/homePage/HomePage\";\r\nimport Logout from \"./components/logout/Logout\";\r\n\r\nclass AppRouter extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={PorpsComponent(LoginPage)}></Route>\r\n        <Route exact path=\"/login\" component={PorpsComponent(LoginPage)}></Route>\r\n        <Route exact path=\"/moke-test-app\" component={PorpsComponent(LoginPage)}></Route>\r\n        <Route exact path=\"/home\" component={PorpsComponent(HomePage)}></Route>\r\n        <Route exact path=\"/question-paper\" component={PorpsComponent(QuestionForm)}></Route>\r\n        <Route exact path=\"/logout\" component={PorpsComponent(Logout)}></Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ActionCreators } from \"../../actions\";\r\nimport ReactMomentCountDown from \"react-moment-countdown\";\r\n\r\nimport \"./HeaderBar.css\";\r\n// const { Header } = Layout;\r\n\r\nclass HeaderBar extends Component {\r\n  // history = useHistory();\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      headerVisible: true,\r\n      remaningTime: undefined,\r\n    };\r\n  }\r\n  onMenuClick = (event) => {\r\n    const { history } = this.props;\r\n    const sPath = event.key;\r\n    history.push(`/${sPath}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n        <span className=\"navbar-brand\">Mock Test paper</span>\r\n        {this.props.showTimer && (\r\n          <ReactMomentCountDown className=\"time-count-down\" toDate={this.props.timeToLogout}  />\r\n          // <span className=\"navbar-brand\">{this.state.remaningTime}</span>\r\n        )}\r\n        {/*<button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarCollapse\"\r\n          aria-controls=\"navbarCollapse\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n         <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">Contact Us</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">Kajal Kumari</a>\r\n          </li>\r\n        </ul>\r\n        </div>\r\n        */}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    TaskHeader: state.TaskHeader\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators(ActionCreators, dispatch),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(HeaderBar)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport HeaderBar from \"./headerBar/HeaderBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport \"./RootComponent.css\";\r\n\r\nclass RootComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showHeader: true,\r\n    };\r\n  }\r\n  exameHoursTime = () => {\r\n    let currentDate = new Date();\r\n    currentDate = new Date(currentDate.setHours(currentDate.getHours() + 1));\r\n    currentDate = currentDate.setMinutes(currentDate.getMinutes() + 5);\r\n    return new Date(currentDate);\r\n  };\r\n  componentDidMount() {}\r\n  getHeaderVisible = () => {\r\n    if (\r\n      this.props.history.location.pathname === \"/\" ||\r\n      this.props.history.location.pathname === \"/login\" ||\r\n      this.props.history.location.pathname === \"/moke-test-app\"\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  render() {\r\n    const headerVisible = this.getHeaderVisible();\r\n    return (\r\n      <div>\r\n        {headerVisible && (\r\n          <HeaderBar\r\n            timeToLogout={\r\n              this.props.history.location.pathname === \"/question-paper\"\r\n                ? this.exameHoursTime()\r\n                : undefined\r\n            }\r\n            showTimer={this.props.history.location.pathname === \"/question-paper\"}\r\n          />\r\n        )}\r\n        <div className=\"container\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RootComponent);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AppRouter from \"./AppRouter\";\nimport RootComponent from \"./components/RootComponent\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialState: false,\n    };\n  }\n  render() {\n    return (\n      <div>\n        <RootComponent>\n          <AppRouter />\n        </RootComponent>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { cloneDeep} from 'lodash';\r\nimport * as ActionType from '../actionTypes/ActionTypes';\r\n\r\nlet initialState = {\r\n    timeToLogout:undefined,\r\n    examSuccessReport:{},\r\n    questionList:[]\r\n}\r\nexport const questionReducer = (state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case ActionType.GET_QUESTION_LIST_DATA: {\r\n            const newState = cloneDeep(state);\r\n            newState.questionList = action.payload;\r\n            return newState;\r\n        }\r\n        case ActionType.GET_QUESTION_SUBMIT_DATA: {\r\n            const newState = cloneDeep(state);\r\n            newState.questionList = [];\r\n            newState.examSuccessReport = action.payload;\r\n            return newState;\r\n        }\r\n        default:{\r\n            return initialState;\r\n        }\r\n    }\r\n}","import { cloneDeep} from 'lodash';\r\nimport * as ActionType from '../actionTypes/ActionTypes';\r\n\r\nconst exameHoursTime= ()=>{\r\n    let currentDate = new Date();\r\n    currentDate = new Date(currentDate.setHours(currentDate.getHours() + 1));\r\n    currentDate = currentDate.setMinutes(currentDate.getMinutes() + 5);\r\n    return new Date(currentDate);\r\n}\r\n\r\nlet initialState = {\r\n    timeToLogout:undefined,\r\n    adminUser:{},\r\n    token:\"\"\r\n}\r\nexport const taskHeaderReducer = (state = initialState, action) => {\r\n\r\n    let newState = state;\r\n    switch (action.type) {\r\n        case ActionType.LOGIN_SUCCESSFUL_DATA:{\r\n            newState = cloneDeep(state);\r\n            newState.adminUser = action.payload.user;\r\n            newState.token = action.payload.token;\r\n            return newState;\r\n        }\r\n        case ActionType.GET_ADMIN_USER_DATA:{\r\n            newState = cloneDeep(state);\r\n            newState.adminUser = action.payload;\r\n            return newState;\r\n        }\r\n        case ActionType.GET_DASHBOARD_DATA: {\r\n            newState = cloneDeep(state);\r\n            newState.taskList = action.payload;\r\n            return newState;\r\n        }\r\n        case ActionType.SET_LOGOUT_TIME: {\r\n            newState = cloneDeep(state);\r\n            newState.logoutTimeRemaning = exameHoursTime();\r\n            return newState;\r\n        }\r\n        default:{\r\n            return newState;\r\n        }\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport {questionReducer} from './questionReducer';\r\nimport {taskHeaderReducer} from './taskHeaderReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    QuestionReducer:questionReducer,\r\n    TaskHeader:taskHeaderReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware,compose} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducer';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk)) \r\n)\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport createHistory from \"history/createBrowserHistory\";\n//css\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/store\";\n\nconst history = createHistory();\n\nconst app = (\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}