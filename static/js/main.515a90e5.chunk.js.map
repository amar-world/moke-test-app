{"version":3,"sources":["actions/questionAction.js","actionTypes/ActionTypes.js","actions/headerAction.js","actions/index.js","components/PropsComponent.js","components/questionTemplate/QuestionTemplate.js","components/questionForm/QuestionForm.js","AppRouter.js","components/headerBar/HeaderBar.js","components/RootComponent.js","App.js","reducer/questionReducer.js","reducer/taskHeaderReducer.js","reducer/index.js","store/store.js","index.js"],"names":["getQuestionList","data","dispatch","type","payload","questionData","getHeaderData","userName","userType","ActionCreators","Object","assign","questionAction","headerAction","PorpsComponent","ComposedComponent","props","state","someData","this","Component","connect","TaskHeader","QuestionReducer","actions","bindActionCreators","QuestionTemplate","editable","class","className","question","questionText","Group","onChange","e","selectedOption","value","firstOption","secondOption","thirdOption","fourthOption","withRouter","QuestionForm","onSubmitOfQuestion","event","preventDefault","questionList","console","log","map","eachQuestion","index","AppRouter","exact","path","component","HeaderBar","onMenuClick","history","sPath","key","push","headerVisible","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","RootComponent","children","App","initialState","UserName","rootReducer","combineReducers","action","newState","cloneDeep","taskList","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","createHistory","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.515a90e5.chunk.js","sourcesContent":["import * as ActionType from '../actionTypes/ActionTypes';\r\nimport questionData from '../jsonData/questionData.json';\r\n// import axios from 'axios';\r\n\r\nexport const getQuestionList = (data) => (dispatch) => {\r\n\r\n  const dataValue = questionData;\r\n  // console.log(dataValue);\r\n  dispatch({\r\n    type: ActionType.GET_QUESTION_LIST_DATA,\r\n    payload: dataValue\r\n  });\r\n\r\n  /* axios({      \r\n   url: '../jsonData/TaskDashboard.json',\r\n   mode: \"CORS\",\r\n   method: 'GET',\r\n   dataType: 'JSON',\r\n   async: true,\r\n   crossDomain: true,\r\n   withCredentials: false,\r\n   \r\n }).then(response => {\r\n    console.log(response);\r\n    dispatch({\r\n      type: ActionType.GET_DASHBOARD_DATA,\r\n      payload: []\r\n    });\r\n   }).catch(() => {\r\n\r\n   }) */\r\n  \r\n  };\r\n\r\n","// Header Types\r\nexport const GET_HEADER_DATA = 'GET_HEADER_DATA';\r\n//DASHBOARD TYPES\r\nexport const GET_DASHBOARD_DATA = 'GET_DASHBOARD_DATA';\r\n// Create Task types\r\nexport const GET_QUESTION_LIST_DATA = 'GET_QUESTION_LIST_DATA';","import * as ActionType from \"../actionTypes/ActionTypes\";\r\n\r\nexport const getHeaderData = (data) => (dispatch) => {\r\n  const newData = {\r\n   userName:\"amarjeet\",\r\n   userType:\"Developer\"\r\n  };\r\n  dispatch({\r\n    type: ActionType.GET_HEADER_DATA,\r\n    payload: newData,\r\n  });\r\n};\r\n\r\n","import * as questionAction from './questionAction';\r\nimport * as headerAction from './headerAction';\r\n\r\nexport const ActionCreators = Object.assign(\r\n    {},\r\n    questionAction,\r\n    headerAction\r\n);","import React, { Component } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ActionCreators } from \"../actions\";\r\n\r\nexport default function PorpsComponent  (ComposedComponent){\r\n\r\n class PorpsComponent extends Component{\r\n\r\n    constructor(props){\r\n        \r\n        super(props);\r\n        this.state={\r\n            someData:'sdfgfds'\r\n        }\r\n    }\r\n\r\n    render() {\r\n      \r\n        return (<ComposedComponent {...this.props}/>);\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      TaskHeader: state.TaskHeader,\r\n      QuestionReducer:state.QuestionReducer\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      actions: bindActionCreators(ActionCreators, dispatch)\r\n    };\r\n  };\r\n  \r\n    return connect(mapStateToProps, mapDispatchToProps)(PorpsComponent);\r\n}","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./QuestionTemplate.css\";\r\nimport { Radio } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass QuestionTemplate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editable: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <div class=\"row\">\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12\">\r\n            <div className=\"quest-temp\">{this.props.question.questionText}</div>\r\n            <Radio.Group\r\n              onChange={(e) => {\r\n                this.props.question.selectedOption = e.value;\r\n              }}\r\n            >\r\n              <div class=\"row question-radio\">\r\n              <div class=\"col-xs-12 col-sm-6 col-sm-4\">\r\n                <Radio value={1}>{this.props.question.firstOption}</Radio>\r\n                <Radio value={2}>{this.props.question.secondOption}</Radio>\r\n                <Radio value={3}>{this.props.question.thirdOption}</Radio>\r\n                <Radio value={4}>{this.props.question.fourthOption}</Radio>\r\n              </div>\r\n              </div>\r\n            </Radio.Group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(QuestionTemplate);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { map } from \"lodash\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./QuestionForm.css\";\r\nimport QuestionTemplate from \"../questionTemplate/QuestionTemplate\";\r\nimport { Button } from \"antd\";\r\n\r\nclass QuestionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      questionList: [],\r\n    };\r\n  }\r\n\r\n  onSubmitOfQuestion = (event) => {\r\n    event.preventDefault();\r\n    const questionData = this.props.QuestionReducer.questionList;\r\n    console.log(questionData);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.actions.getQuestionList();\r\n    // console.log(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        {map(this.props.QuestionReducer.questionList, (eachQuestion, index) => {\r\n          return (\r\n            <div className=\"question-form-block\">\r\n              <span className=\"question-count\">{index + 1}</span>\r\n              <div>\r\n                <QuestionTemplate question={eachQuestion} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"footer\">\r\n          <Button onChange={this.onSubmitOfQuestion}>Submit</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(QuestionForm);\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport PorpsComponent from './components/PropsComponent';\r\nimport QuestionForm from \"./components/questionForm/QuestionForm\";\r\n\r\nclass AppRouter extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={PorpsComponent(QuestionForm)}></Route>\r\n        <Route exact path=\"/question-form\" component={PorpsComponent(QuestionForm)}></Route>\r\n        {/* <Route exact path=\"/createTask\" component={PorpsComponent(CreateTask)}></Route>\r\n        <Route exact path=\"/createProject\" component={PorpsComponent(CreateProject)}></Route> */}\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ActionCreators } from \"../../actions\";\r\n\r\nimport \"./HeaderBar.css\";\r\n// const { Header } = Layout;\r\n\r\nclass HeaderBar extends Component {\r\n  // history = useHistory();\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      headerVisible: true,\r\n    };\r\n  }\r\n\r\n  onMenuClick = (event) => {\r\n    const { history } = this.props;\r\n    const sPath = event.key;\r\n    history.push(`/${sPath}`);\r\n  };\r\n\r\n  render() {\r\n    // const menu = (\r\n    //   <Menu onClick={this.onMenuClick}>\r\n    //     <Menu.Item key=\"dashboard\">Dashbord</Menu.Item>\r\n    //     <Menu.Item key=\"createTask\">Create Task</Menu.Item>\r\n    //     <Menu.Item key=\"createProject\">Create Project</Menu.Item>\r\n    //   </Menu>\r\n    // );\r\n    return (\r\n      <nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n      <a class=\"navbar-brand\" href=\"#\">Mock Test paper</a>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">Contact Us</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">Kajal Kumari</a>\r\n          </li>\r\n        </ul>\r\n        </div>\r\n    </nav>\r\n      );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    TaskHeader: state.TaskHeader,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actions: bindActionCreators(ActionCreators, dispatch),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(HeaderBar)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport HeaderBar from \"./headerBar/HeaderBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport \"./RootComponent.css\";\r\n\r\nclass RootComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(`i m in root page and my props are ${props}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HeaderBar />\r\n        <div className=\"container\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RootComponent);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AppRouter from \"./AppRouter\";\nimport RootComponent from \"./components/RootComponent\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialState: false,\n    };\n  }\n  render() {\n    return (\n      <div>\n        <RootComponent>\n          <AppRouter />\n        </RootComponent>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { cloneDeep} from 'lodash';\r\nimport * as ActionType from '../actionTypes/ActionTypes';\r\n\r\nlet initialState = {\r\n    questionList:[]\r\n}\r\nexport const questionReducer = (state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case ActionType.GET_QUESTION_LIST_DATA: {\r\n            const newState = cloneDeep(state);\r\n            newState.questionList = action.payload;\r\n            return newState;\r\n        }\r\n        default:{\r\n            return initialState;\r\n        }\r\n    }\r\n}","import { cloneDeep} from 'lodash';\r\nimport * as ActionType from '../actionTypes/ActionTypes';\r\n\r\nlet initialState = {\r\n    UserName:'Amarjeet'\r\n}\r\nexport const taskHeaderReducer = (state = initialState, action) => {\r\n\r\n    let newState = state;\r\n    switch (action.type) {\r\n\r\n        case ActionType.GET_DASHBOARD_DATA: {\r\n            newState = cloneDeep(state);\r\n            newState.taskList = action.payload;\r\n            return newState;\r\n        }\r\n        default:{\r\n            return newState;\r\n        }\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport {questionReducer} from './questionReducer';\r\nimport {taskHeaderReducer} from './taskHeaderReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    QuestionReducer:questionReducer,\r\n    TaskHeader:taskHeaderReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware,compose} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducer';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk)) \r\n)\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport createHistory from \"history/createBrowserHistory\";\n//css\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/store\";\n\nconst history = createHistory();\n\nconst app = (\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}